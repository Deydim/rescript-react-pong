// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Model from "./Model.mjs";
import * as React from "react";
import * as Update from "./Update.mjs";

function intToPx(number) {
  return String(number) + "px";
}

function preventDefault(evt) {
  var match = evt.key;
  switch (match) {
    case "ArrowDown" :
    case "ArrowUp" :
        evt.preventDefault();
        return ;
    default:
      return ;
  }
}

function ViewGame(Props) {
  var config = Props.config;
  var match = Model.init(config);
  var ballSize = match.ballSize;
  var playerWidth = match.playerWidth;
  var playerSize = match.playerSize;
  var offsetTop = match.offsetTop;
  var offsetLeft = match.offsetLeft;
  var match$1 = React.useReducer(Update.updateState, Model.make(match.rightPlayerY));
  var setState = match$1[1];
  React.useEffect((function () {
          document.addEventListener("keydown", (function (evt) {
                  preventDefault(evt);
                  return Update.handleUserInput(evt.key, true);
                }));
          return (function (param) {
                    document.removeEventListener("keydown");
                    
                  });
        }), []);
  React.useEffect((function () {
          document.addEventListener("keyup", (function (evt) {
                  preventDefault(evt);
                  return Update.handleUserInput(evt.key, false);
                }));
          return (function (param) {
                    document.removeEventListener("keyup");
                    
                  });
        }), []);
  React.useEffect((function () {
          Update.tick(setState, undefined, undefined, undefined);
          
        }), []);
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "field",
                  style: {
                    height: String(match.fieldHeight) + "px",
                    left: String(offsetLeft) + "px",
                    top: String(offsetTop) + "px",
                    width: String(match.fieldWidth) + "px"
                  }
                }), React.createElement("div", {
                  className: "player",
                  style: {
                    height: String(playerSize) + "px",
                    left: String(match.leftPlayerX + offsetLeft | 0) + "px",
                    top: String(match.leftPlayerY + offsetTop | 0) + "px",
                    width: String(playerWidth) + "px"
                  }
                }), React.createElement("div", {
                  className: "player",
                  style: {
                    height: String(playerSize) + "px",
                    left: String(match.rightPlayerX + offsetLeft | 0) + "px",
                    top: String(match$1[0].rightPlayerY + offsetTop | 0) + "px",
                    width: String(playerWidth) + "px"
                  }
                }), React.createElement("div", {
                  className: "ball",
                  style: {
                    height: String(ballSize) + "px",
                    left: String(match.ballX + offsetLeft | 0) + "px",
                    top: String(match.ballY + offsetTop | 0) + "px",
                    width: String(ballSize) + "px",
                    borderRadius: String(ballSize / 2 | 0) + "px"
                  }
                }));
}

var make = ViewGame;

export {
  intToPx ,
  preventDefault ,
  make ,
  
}
/* react Not a pure module */
